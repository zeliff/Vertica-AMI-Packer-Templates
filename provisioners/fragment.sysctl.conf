### Vertica:  The following is the tcp tuning done to make vertica perform better ###
#
# Increase number of incoming connections
net.core.somaxconn = 1024
#Sets the send socket buffer maximum size in bytes.
net.core.wmem_max = 16777216
#Sets the receive socket buffer maximum size in bytes.
net.core.rmem_max = 16777216
#Sets the receive socket buffer default size in bytes.
net.core.wmem_default = 262144
#Sets the receive socket buffer maximum size in bytes.
net.core.rmem_default = 262144
#Sets the maximum number of packets allowed to queue when a particular interface receives packets faster than the kernel can process them. The default value for this file is 300.
# increase the length of the processor input queue
net.core.netdev_max_backlog = 100000
net.ipv4.tcp_mem = 16777216 16777216 16777216
net.ipv4.tcp_wmem = 8192 262144 8388608
net.ipv4.tcp_rmem = 8192 262144 8388608
net.ipv4.udp_mem = 16777216 16777216 16777216
net.ipv4.udp_rmem_min = 16384
net.ipv4.udp_wmem_min = 16384

# This setting is added to enable Vertica's use with the AWS network ELB.   The ELB's default timeout, which is not configurable, is 350 seconds.
# See https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#connection-idle-timeout for more information.
net.ipv4.tcp_keepalive_time = 340

# Discourage the kernel from swapping 
vm.swappiness=0 

# Reduce dirty page radio in order to shorten page flush time
vm.dirty_ratio=8
vm.dirty_background_ratio=4

